# Copyright (C) 2021-2022 F4PGA Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Check and then upload packages (and potentially publish to PyPI)
description: Check the (already built) and upload packages as artifacts (and potentially publish onto Test and real PyPI servers).
inputs:
  type:
    description: Type of packages.
    required: true
  publish:
    description: Publish packages to PyPI.
    default: false
  root_user:
    description: Publish to PyPI from given user's repository.
    default:
  root_branch:
    description: Publish to PyPI on provided branch.
    default: refs/heads/master

runs:
  using: "includes"

  steps:
  # Check and upload wheels
  - name: âœ”ï¸Ž Check wheels ðŸ“¦
    if: inputs.type == 'wheels'
    shell: bash
    run: |
      PYVER=$(python -c "import sys; print(sys.version[0])")
      for WHEEL in dist/*.whl; do
        echo
        echo "::group::Checking $WHEEL"
        echo
        python -m zipfile -t $WHEEL
        python -m zipfile -l $WHEEL
        echo
        if [ "$(uname)" = "Linux" -a $PYVER -eq 3 -a "${WHEEL: -8}" != "-any.whl" ]; then
          auditwheel show $WHEEL
        fi
        echo
        twine check $WHEEL
        echo
        echo "::endgroup::"
      done

  - name: ðŸ“¤ Upload wheels ðŸ“¦
    if: inputs.type == 'wheels'
    uses: actions/upload-artifact@v2
    with:
      name: ${{ inputs.type }}-${{ runner.os }}
      path: dist

  # Check and upload source package
  - name: âœ”ï¸Ž Check source ðŸ“¦
    if: inputs.type == 'source'
    shell: bash
    run: |
      shopt -s nullglob
      for SRC in dist/*.zip; do
        echo
        echo "::group::Checking $SRC"
        echo
        python -m zipfile --test $SRC
        python -m zipfile --list $SRC
        echo
        twine check $SRC
        echo
        echo "::endgroup::"
      done
      for SRC in dist/*.t*gz; do
        echo
        echo "::group::Checking $SRC"
        echo
        python -m tarfile --list $SRC
        echo
        twine check $SRC
        echo
        echo "::endgroup::"
      done

  - name: ðŸ“¤ Upload source ðŸ“¦
    if: inputs.type == 'source'
    uses: actions/upload-artifact@v2
    with:
      name: ${{ inputs.type }}
      path: dist

  # Publish to PyPI if requested.
  - name: ðŸ“¤ Publish ${{ inputs.type }} to Test PyPI
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
    if: |
        inputs.publish &&
        (github.ref == inputs.root_branch) &&
        (env.TWINE_PASSWORD != null)
    run: |
      twine upload --skip-existing --verbose --repository testpypi dist/*

  - name: ðŸ“¤ Publish ${{ inputs.type }} to PyPI
    if: |
        inputs.publish &&
        (github.ref == inputs.root_branch) &&
        startsWith(github.repository, inputs.root_user) &&
        (github.event_name != 'pull_request') &&
        (env.TWINE_PASSWORD != null)
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    run: |
      twine upload dist/*
